/*
Copyright 2001 by David Copeland

This file is part of Dave's Clone of Adventure.

Dave's Clone of Adventure is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

Dave's Clone of Adventure is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Dave's Clone of Adventure; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/
#include "Game2World.h"
#include "Game.h"

#include "Gate.h"
#include "Dragon.h"
#include "Bat.h"
#include "Key.h"
#include "Magnet.h"
#include "TransmolecularDot.h"

Game2World::Game2World(BOOL difficult, BOOL extraItems) : World(difficult,extraItems) 
{ 
	isMazeDark = difficult;
	itsDragonMouthOpenTime = difficult ? 500 : 1000;
	itsNonRedDragonSpeed = Player::theMovementSpeed - (difficult ? 10 : 75);

	itsYellowKeyRoom = 19;
	itsYellowKeyX = 192;
	itsYellowKeyY = 164;

	itsWhiteKeyRoom = 9;
	itsWhiteKeyX = 128;
	itsWhiteKeyY = 164;

	itsBlackKeyRoom = 30;
	itsBlackKeyX = 136;
	itsBlackKeyY = 208;

	itsYellowDragonRoom = 27;
	itsYellowDragonX = 320;
	itsYellowDragonY = 0;

	itsGreenDragonRoom = 20;
	itsGreenDragonX = 544;
	itsGreenDragonY = 160;

	itsRedDragonRoom = 17;
	itsRedDragonX = 72;
	itsRedDragonY = 224;

	itsSwordRoom = 1;
	itsSwordX = 64;
	itsSwordY = 320;

	itsMagnetRoom = 25;
	itsMagnetX = 544;
	itsMagnetY = 288;

	itsBatRoom = 1;
	itsBatX = 48;
	itsBatY = 0;

	itsDotRoom = 15;
	itsDotX = 271;
	itsDotY = 351;

	itsBridgeRoom = 20;
	itsBridgeX = 160;
	itsBridgeY = 128;

	itsChaliceRoom = 17;
	itsChaliceX = 72;
	itsChaliceY = 224;

	itsCandleX = 32;
	itsCandleY = 64;
	itsCandleRoom = 8;

	itsArmourX = -1;
	itsArmourY = -1;
	itsArmourRoom = 2;
}

BOOL Game2World::init(DWORD currentTime, LPDIRECTDRAW directDrawObject)
{
	// OK< this is really cheesy, but a lot of this is copied right from Game1World.  The reason
	// is that since I used CPP macros, it's really hard to re-use that code via inheritance.
	// This will all go away once the world creation is taken out of the code.

	itsGateImages = NULL;
	itsChaliceImages = NULL;
	itsBatImages = NULL;
	itsRobinettImages = NULL;
	itsDavetronImages = NULL;
	itsThanksImages = NULL;

	INIT_WORLD();

	// room 0
	// bottom goes to 10
    NEW_ROOM_EXTRA("BelowYellowCastle",bgImage,32,FALSE,FALSE,FALSE,-1,-1);

		ADD_WALL(0,0,256,32,32);
		ADD_WALL(384,0,256,32,32);
		ADD_WALL(0,Game::theScreenHeight-32,Game::theScreenWidth,32,32);
    
    END_NEW_ROOM(FALSE,FALSE);

	// room 1
    NEW_ROOM_EXTRA("YellowVestibule",bgImage,207,FALSE,FALSE,TRUE,64,320);

		int color=207;
		ADD_WALL(0,Game::theScreenHeight-32,256,32,color);
		ADD_WALL(384,Game::theScreenHeight-32,256,32,color);
		ADD_WALL(0,0,160,32,color);
		ADD_WALL(Game::theScreenWidth-160,0,160,32,color);
		ADD_WALL(0,0,32,Game::theScreenHeight,color);
		ADD_WALL(Game::theScreenWidth-32,0,32,Game::theScreenHeight,color);
		ADD_WALL(160,0,16,32,color);
		ADD_WALL(192,0,16,32,color);
		ADD_WALL(224,0,16,32,color);
		ADD_WALL(256,0,16,32,color);
		ADD_WALL(368,0,16,32,color);
		ADD_WALL(400,0,16,32,color);
		ADD_WALL(432,0,16,32,color);
		ADD_WALL(464,0,16,32,color);
		ADD_WALL(160,32,112,128,color);
		ADD_WALL(368,32,112,128,color);
		ADD_WALL(272,96,96,64,color);
		ADD_WALL(192,160,256,64,color);
		ADD_WALL(192,224,96,64,color);
		ADD_WALL(352,224,96,64,color);

		ADD_GATE(CASTLE_COLOR_GOLD,goldGate);

    END_NEW_ROOM(TRUE,FALSE);

	// room 2
	NEW_ROOM_EXTRA("InsideYellow",bgImage,207,FALSE,FALSE,TRUE,64,320);

		ADD_WALL(0,Game::theScreenHeight-32,256,32,207);
		ADD_WALL(384,Game::theScreenHeight-32,256,32,207);
		ADD_WALL(0,0,Game::theScreenWidth,32,207);
		ADD_WALL(0,0,32,Game::theScreenHeight,207);
		ADD_WALL(Game::theScreenWidth-32,0,32,Game::theScreenHeight,207);


    END_NEW_ROOM(FALSE,TRUE);

	// room 3
	// bottom goes to 11
	NEW_ROOM_EXTRA("LeftOfGreenRoom",bgImage,88,FALSE,TRUE,TRUE,-1,-1);
		ADD_WALL(0,0,256,32,88);
		ADD_WALL(384,0,256,32,88);

		ADD_WALL(0,Game::theScreenHeight-32,Game::theScreenWidth,32,88);
		
		ADD_CHANGING_WALL(40,0,8,Game::theScreenHeight,0);
		
    END_NEW_ROOM(FALSE,FALSE);

	// room 4
	NEW_ROOM_EXTRA("RightOfGreenRoom",bgImage,210,FALSE,TRUE,TRUE,-1,-1);

		ADD_WALL(0,Game::theScreenHeight-32,256,32,210);
		ADD_WALL(384,Game::theScreenHeight-32,256,32,210);
		ADD_WALL(0,0,Game::theScreenWidth,32,210);
		
		ADD_CHANGING_WALL(Game::theScreenWidth-48,0,8,Game::theScreenHeight,0);

    END_NEW_ROOM(FALSE,FALSE);

	// room 5
	// This will become an easter egg room
	NEW_ROOM_EXTRA("EasterEggRoom1",bgImage,111,FALSE,FALSE,FALSE,-1,-1);
		
		ADD_WALL(0,0,256,32,111);
		ADD_WALL(384,0,256,32,111);

		ADD_WALL(0,352,320,32,111);
		ADD_WALL(384,352,256,32,111);

	END_NEW_ROOM(FALSE,FALSE);

	// room 6
	NEW_ROOM_EXTRA("Labrynth Entrance",bgImage,239,isMazeDark,TRUE,TRUE,112,128);

	    // left walls
		ADD_WALL(0,0,96,32,239);
		ADD_WALL(0,96,64,64,239);
		ADD_WALL(0,224,96,64,239);
		ADD_WALL(96,0,32,288,239);

		// right walls
		ADD_WALL(544,0,96,32,239);
		ADD_WALL(576,96,64,64,239);
		ADD_WALL(544,224,96,64,239);
		ADD_WALL(512,0,32,288,239);

		// middle walls
		ADD_WALL(160,224,320,64,239);
		ADD_WALL(160,0,32,224,239);
		ADD_WALL(224,0,32,96,239);
		ADD_WALL(224,96,192,64,239);
		
		ADD_WALL(288,0,64,32,239);

		ADD_WALL(384,0,32,96,239);
		ADD_WALL(448,0,32,224,239);

		// Bottom walls
		ADD_WALL(0,352,256,32,239);
		ADD_WALL(384,352,256,32,239);
	END_NEW_ROOM(FALSE,FALSE);

	// room 7
	NEW_ROOM_EXTRA("Labrynth 2nd Room",bgImage,239,isMazeDark,FALSE,FALSE,-1,-1);

		// left walls
		ADD_WALL(0,0,64,32,239);
		ADD_WALL(0,96,192,64,239);
		ADD_WALL(0,224,64,64,239);
		ADD_WALL(0,352,128,32,239);

		ADD_WALL(96,0,32,96,239);
		ADD_WALL(96,224,32,160,239);

		// right walls
		ADD_WALL(576,0,64,32,239);
		ADD_WALL(448,96,192,64,239);
		ADD_WALL(576,224,64,64,239);
		ADD_WALL(512,352,128,32,239);

		ADD_WALL(512,0,32,96,239);
		ADD_WALL(512,224,32,160,239);

		// middle walls
		ADD_WALL(160,96,32,288,239);
		ADD_WALL(448,96,32,288,239);

		ADD_WALL(160,0,128,32,239);
		ADD_WALL(352,0,128,32,239);

		ADD_WALL(224,0,64,288,239);
		ADD_WALL(352,0,64,288,239);

		ADD_WALL(224,288,32,96,239);
		ADD_WALL(384,288,32,96,239);

	END_NEW_ROOM(FALSE,FALSE);

	// room 8
	NEW_ROOM_EXTRA("Labrynth Exit",bgImage,239,isMazeDark,TRUE,TRUE,160,64);

		ADD_WALL(0,0,256,32,239);
		ADD_WALL(384,0,256,32,239);

		ADD_WALL(0,96,64,192,239);
		ADD_WALL(576,96,64,192,239);

		ADD_WALL(0,352,64,32,239);
		ADD_WALL(576,352,64,32,239);

		ADD_WALL(128,32,32,192,239);
		ADD_WALL(480,32,32,192,239);

		ADD_WALL(224,32,32,64,239);
		ADD_WALL(384,32,32,64,239);

		ADD_WALL(224,96,64,64,239);
		ADD_WALL(352,96,64,64,239);

		ADD_WALL(64,224,224,64,239);
		ADD_WALL(352,224,224,64,239);

		ADD_WALL(96,288,32,96,239);
		ADD_WALL(512,288,32,96,239);

		ADD_WALL(160,352,128,32,239);
		ADD_WALL(352,352,128,32,239);

		ADD_WALL(256,288,32,64,239);
		ADD_WALL(352,288,32,64,239);

	END_NEW_ROOM(FALSE,FALSE);

	// room 9
	// bottom goes to 4
	NEW_ROOM_EXTRA("Labrynth Room 3",bgImage,239,isMazeDark,TRUE,TRUE,128,164);

		ADD_WALL(0,0,128,32,239);
		ADD_WALL(512,0,128,32,239);

		ADD_WALL(160,0,32,32,239);
		ADD_WALL(448,0,32,32,239);

		ADD_WALL(224,0,32,160,239);
		ADD_WALL(384,0,32,160,239);

		ADD_WALL(96,32,32,128,239);
		ADD_WALL(512,32,32,128,239);

		ADD_WALL(128,96,96,64,239);
		ADD_WALL(416,96,96,64,239);

		ADD_WALL(0,96,64,192,239);
		ADD_WALL(576,96,64,192,239);

		ADD_WALL(64,224,64,64,239);
		ADD_WALL(512,224,64,64,239);

		ADD_WALL(96,288,32,64,239);
		ADD_WALL(512,288,32,64,239);

		ADD_WALL(0,352,640,32,239);

	END_NEW_ROOM(FALSE,FALSE);

	// room 10
	NEW_ROOM_EXTRA("Labrynth Room 4",bgImage,239,isMazeDark,TRUE,TRUE,448,292);

		ADD_WALL(0,0,640,32,239);

		ADD_WALL(0,96,160,64,239);
		ADD_WALL(480,96,160,64,239);

		ADD_WALL(0,160,64,128,239);
		ADD_WALL(576,160,64,128,239);

		ADD_WALL(0,352,128,32,239);
		ADD_WALL(512,352,128,32,239);

		ADD_WALL(192,96,256,64,239);

		ADD_WALL(288,160,64,224,239);

		ADD_WALL(96,224,160,64,239);
		ADD_WALL(384,224,160,64,239);

		ADD_WALL(96,288,32,64,239);
		ADD_WALL(512,288,32,64,239);

		ADD_WALL(160,352,32,32,239);
		ADD_WALL(448,352,32,32,239);

		ADD_WALL(224,288,32,96,239);
		ADD_WALL(384,288,32,96,239);

	END_NEW_ROOM(FALSE,FALSE);

	// room 11
    NEW_ROOM_EXTRA("BlackVestibule",bgImage,0,FALSE,FALSE,FALSE,-1,-1);

		int color=0;
		ADD_WALL(0,Game::theScreenHeight-32,256,32,color);
		ADD_WALL(384,Game::theScreenHeight-32,256,32,color);
		ADD_WALL(0,0,160,32,color);
		ADD_WALL(Game::theScreenWidth-160,0,160,32,color);
		ADD_WALL(0,0,32,Game::theScreenHeight,color);
		ADD_WALL(Game::theScreenWidth-32,0,32,Game::theScreenHeight,color);
		ADD_WALL(160,0,16,32,color);
		ADD_WALL(192,0,16,32,color);
		ADD_WALL(224,0,16,32,color);
		ADD_WALL(256,0,16,32,color);
		ADD_WALL(368,0,16,32,color);
		ADD_WALL(400,0,16,32,color);
		ADD_WALL(432,0,16,32,color);
		ADD_WALL(464,0,16,32,color);
		ADD_WALL(160,32,112,128,color);
		ADD_WALL(368,32,112,128,color);
		ADD_WALL(272,96,96,64,color);
		ADD_WALL(192,160,256,64,color);
		ADD_WALL(192,224,96,64,color);
		ADD_WALL(352,224,96,64,color);

		ADD_GATE(CASTLE_COLOR_BLACK,blackGate);

    END_NEW_ROOM(FALSE,FALSE);

	// room 12
	NEW_ROOM_EXTRA("InsideBlack",bgImage,180,FALSE,TRUE,TRUE,-1,-1);

		ADD_WALL(0,0,256,32,180);
		ADD_WALL(384,0,256,32,180);

		ADD_WALL(0,352,256,32,180);
		ADD_WALL(384,352,256,32,180);

		ADD_WALL(0,0,32,Game::theScreenHeight,180);
		ADD_WALL(608,0,32,Game::theScreenHeight,180);
		
	END_NEW_ROOM(FALSE,FALSE);

	// room 13
	NEW_ROOM_EXTRA("EasterEggRoom2",bgImage,3,FALSE,FALSE,FALSE,-1,-1);

		ADD_WALL(0,0,640,32,3);

		ADD_WALL(0,352,256,32,3);
		ADD_WALL(384,352,256,32,3);

		ADD_WALL(0,0,32,Game::theScreenHeight,3);
		ADD_WALL(608,0,32,Game::theScreenHeight,3);
		
	END_NEW_ROOM(FALSE,FALSE);

	// room 14
	NEW_ROOM_EXTRA("BlackCatacombsEntrance",bgImage,111,TRUE,FALSE,FALSE,-1,-1);

		ADD_WALL(0,0,32,32,111);
		ADD_WALL(64,0,32,96,111);
		ADD_WALL(128,0,64,32,111);
		ADD_WALL(224,0,32,96,111);

		ADD_WALL(288,0,64,96,111);
		
		ADD_WALL(608,0,32,32,111);
		ADD_WALL(544,0,32,96,111);
		ADD_WALL(448,0,64,32,111);
		ADD_WALL(384,0,32,96,111);

		ADD_WALL(0,96,256,64,111);
		ADD_WALL(384,96,256,64,111);
		
		ADD_WALL(0,224,256,64,111);
		ADD_WALL(384,224,256,64,111);

		ADD_WALL(0,352,256,32,111);
		ADD_WALL(384,352,256,32,111);

	END_NEW_ROOM(FALSE,FALSE);

	// room 15 (only the dot can start here)
	NEW_ROOM_EXTRA("BlackCatacombs2",bgImage,111,TRUE,FALSE,FALSE,-1,-1);

		ADD_WALL(0,0,128,32,111);
		ADD_WALL(0,0,32,160,111);
		ADD_WALL(192,0,256,32,111);
		ADD_WALL(512,0,128,32,111);

		ADD_WALL(320,32,32,64,111);
		ADD_WALL(96,96,256,64,111);
		ADD_WALL(96,160,32,128,111);
		ADD_WALL(416,96,224,64,111);

		ADD_WALL(416,160,32,128,111);

		ADD_WALL(0,224,96,64,111);
		ADD_WALL(192,224,256,64,111);
		ADD_WALL(512,224,128,64,111);

		ADD_WALL(0,288,40,96,111);
		ADD_WALL(192,288,32,96,111);
		ADD_WALL(320,288,32,96,111);
		ADD_WALL(512,288,32,96,111);

		ADD_WALL(0,352,128,32,111);
		ADD_WALL(192,352,256,32,111);
		ADD_WALL(512,352,128,32,111);
		
	END_NEW_ROOM(FALSE,FALSE);

	// room 16
	NEW_ROOM_EXTRA("BlackCatacombs3",bgImage,111,TRUE,TRUE,TRUE,32,64);
		
		ADD_WALL(0,0,128,32,111);
		ADD_WALL(192,0,256,32,111);
		ADD_WALL(512,0,128,32,111);

		ADD_WALL(192,32,32,64,111);
		ADD_WALL(416,32,32,64,111);

		ADD_WALL(0,96,224,64,111);
		ADD_WALL(416,96,224,64,111);

		ADD_WALL(0,224,32,64,111);
		ADD_WALL(96,224,448,64,111);
		ADD_WALL(608,224,32,64,111);

		ADD_WALL(96,288,32,96,111);
		ADD_WALL(512,288,32,96,111);

		ADD_WALL(0,352,128,32,111);
		ADD_WALL(192,352,256,32,111);
		ADD_WALL(512,352,128,32,111);

	END_NEW_ROOM(FALSE,FALSE);

	//room 17
	NEW_ROOM_EXTRA("BlackCatacombs4",bgImage,111,TRUE,TRUE,TRUE,72,224);

		ADD_WALL(0,0,640,32,111);
		ADD_WALL(288,32,32,128,111);
		ADD_WALL(608,32,32,128,111);
		
		ADD_WALL(0,96,256,64,111);
		ADD_WALL(320,96,264,64,111);

		ADD_WALL(224,160,32,64,111);
		ADD_WALL(544,160,40,64,111);

		ADD_WALL(0,224,64,64,111);
		ADD_WALL(128,224,256,64,111);
		ADD_WALL(448,224,192,64,111);

		ADD_WALL(128,288,64,96,111);
		ADD_WALL(288,288,32,96,111);
		ADD_WALL(448,288,64,96,111);
		ADD_WALL(608,288,32,96,111);

		ADD_WALL(0,352,32,32,111);
		ADD_WALL(64,352,32,32,111);
		ADD_WALL(128,352,64,32,111);
		ADD_WALL(224,352,32,32,111);
		ADD_WALL(288,352,64,32,111);
		ADD_WALL(384,352,32,32,111);
		ADD_WALL(448,352,64,32,111);
		ADD_WALL(544,352,32,32,111);
		ADD_WALL(608,352,32,32,111);

	END_NEW_ROOM(FALSE,FALSE);

	// room 18
	NEW_ROOM_EXTRA("CatacombsEntrance",bgImage,224,TRUE,TRUE,TRUE,34,64);

		ADD_WALL(192,96,256,64,224);
		ADD_WALL(288,160,64,224,224);

		ADD_WALL(0,0,256,32,224);
		ADD_WALL(96,32,32,256,224);
		ADD_WALL(0,96,64,64,224);
		ADD_WALL(0,224,96,64,224);
		ADD_WALL(0,352,192,32,224);
		ADD_WALL(160,224,32,128,224);
		ADD_WALL(224,352,32,32,224);

		ADD_WALL(384,0,256,32,224);
		ADD_WALL(512,32,32,256,224);
		ADD_WALL(576,96,64,64,224);
		ADD_WALL(544,224,96,64,224);
		ADD_WALL(448,352,192,32,224);
		ADD_WALL(448,224,32,128,224);
		ADD_WALL(384,352,32,32,224);

	END_NEW_ROOM(FALSE,FALSE);

	// room 19
	NEW_ROOM_EXTRA("Catacombs2",bgImage,224,TRUE,TRUE,TRUE,192,164);

		ADD_WALL(288,0,64,160,224);
		ADD_WALL(224,224,192,64,224);
		ADD_WALL(288,352,64,32,224);

		ADD_WALL(0,0,192,32,224);
		ADD_WALL(224,0,32,160,224);
		ADD_WALL(0,96,64,64,224);
		ADD_WALL(160,96,32,288,224);
		ADD_WALL(192,96,32,64,224);
		ADD_WALL(0,224,96,64,224);
		ADD_WALL(96,224,32,160,224);
		ADD_WALL(224,288,32,96,224);
		ADD_WALL(0,352,64,32,224);

		ADD_WALL(448,0,192,32,224);
		ADD_WALL(384,0,32,160,224);
		ADD_WALL(576,96,64,64,224);
		ADD_WALL(448,96,32,288,224);
		ADD_WALL(416,96,32,64,224);
		ADD_WALL(544,224,96,64,224);
		ADD_WALL(512,224,32,160,224);
		ADD_WALL(384,288,32,96,224);
		ADD_WALL(576,352,64,32,224);


	END_NEW_ROOM(FALSE,FALSE);

	// room 20
	NEW_ROOM_EXTRA("Catacombs3",bgImage,224,TRUE,TRUE,TRUE,160,128);
		
		ADD_WALL(288,0,64,384,224);
		ADD_WALL(0,352,640,32,224);

		ADD_WALL(0,0,64,32,224);
		ADD_WALL(96,0,32,160,224);
		ADD_WALL(160,0,32,32,224);
		ADD_WALL(224,0,32,160,224);
		ADD_WALL(128,96,96,64,224);
		ADD_WALL(96,224,128,64,224);
		ADD_WALL(96,288,32,64,224);

		ADD_WALL(576,0,64,32,224);
		ADD_WALL(512,0,32,160,224);
		ADD_WALL(448,0,32,32,224);
		ADD_WALL(384,0,32,160,224);
		ADD_WALL(416,96,96,64,224);
		ADD_WALL(416,224,128,64,224);
		ADD_WALL(512,288,32,64,224);

	END_NEW_ROOM(FALSE,FALSE);

	// room 21
	NEW_ROOM_EXTRA("RightOfCatacombs",bgImage,35,FALSE,TRUE,TRUE,-1,-1);

		ADD_WALL(0,0,256,32,35);
		ADD_WALL(384,0,256,32,35);

		ADD_WALL(0,352,256,32,35);
		ADD_WALL(384,352,256,32,35);

		ADD_CHANGING_WALL(Game::theScreenWidth-48,0,8,Game::theScreenHeight,0);
		
	END_NEW_ROOM(FALSE,FALSE);

	// room 22
	NEW_ROOM_EXTRA("TopRightOfCatacombs",bgImage,111,FALSE,TRUE,TRUE,-1,-1);

		ADD_WALL(0,0,640,32,111);

		ADD_WALL(0,352,256,32,111);
		ADD_WALL(384,352,256,32,111);

		ADD_WALL(0,0,32,Game::theScreenHeight,111);
		ADD_WALL(608,0,32,Game::theScreenHeight,111);
		
	END_NEW_ROOM(FALSE,FALSE);

	// room 23
	NEW_ROOM_EXTRA("BottomRightOfCatacombs",bgImage,144,FALSE,TRUE,TRUE,-1,-1);

		ADD_WALL(0,352,640,32,144);

		ADD_WALL(0,0,256,32,144);
		ADD_WALL(384,0,256,32,144);

		ADD_WALL(0,0,32,Game::theScreenHeight,144);
		ADD_WALL(608,0,32,Game::theScreenHeight,144);
		
	END_NEW_ROOM(FALSE,FALSE);

	// room 24
	NEW_ROOM_EXTRA("LefttOfCatacombs",bgImage,32,FALSE,TRUE,TRUE,64,-1);

		ADD_WALL(0,0,256,32,32);
		ADD_WALL(384,0,256,32,32);

		ADD_WALL(0,352,256,32,32);
		ADD_WALL(384,352,256,32,32);

		ADD_CHANGING_WALL(40,0,8,Game::theScreenHeight,0);
		
	END_NEW_ROOM(FALSE,FALSE);

	// room 25
	NEW_ROOM_EXTRA("BottomLeftOfCatacombs",bgImage,16,FALSE,TRUE,TRUE,-1,-1);

		ADD_WALL(0,352,640,32,16);

		ADD_WALL(0,0,256,32,16);
		ADD_WALL(384,0,256,32,16);

		ADD_WALL(0,0,32,Game::theScreenHeight,16);
		ADD_WALL(608,0,32,Game::theScreenHeight,16);
		
	END_NEW_ROOM(FALSE,FALSE);

	// room 26
    NEW_ROOM_EXTRA("WhiteVestibule",bgImage,255,FALSE,FALSE,FALSE,-1,-1);

		int color=255;
		ADD_WALL(0,Game::theScreenHeight-32,256,32,color);
		ADD_WALL(384,Game::theScreenHeight-32,256,32,color);
		ADD_WALL(0,0,160,32,color);
		ADD_WALL(Game::theScreenWidth-160,0,160,32,color);
		ADD_WALL(0,0,32,Game::theScreenHeight,color);
		ADD_WALL(Game::theScreenWidth-32,0,32,Game::theScreenHeight,color);
		ADD_WALL(160,0,16,32,color);
		ADD_WALL(192,0,16,32,color);
		ADD_WALL(224,0,16,32,color);
		ADD_WALL(256,0,16,32,color);
		ADD_WALL(368,0,16,32,color);
		ADD_WALL(400,0,16,32,color);
		ADD_WALL(432,0,16,32,color);
		ADD_WALL(464,0,16,32,color);
		ADD_WALL(160,32,112,128,color);
		ADD_WALL(368,32,112,128,color);
		ADD_WALL(272,96,96,64,color);
		ADD_WALL(192,160,256,64,color);
		ADD_WALL(192,224,96,64,color);
		ADD_WALL(352,224,96,64,color);

		ADD_GATE(CASTLE_COLOR_WHITE,whiteGate);

    END_NEW_ROOM(FALSE,FALSE);

	NEW_ROOM_EXTRA("WhiteMazeEntrance",bgImage,144,isMazeDark,TRUE,TRUE,138,164);

		ADD_WALL(0,0,72,96,144);
		ADD_WALL(104,0,96,32,144);
		ADD_WALL(232,0,32,160,144);
		ADD_WALL(0,96,264,64,144);
		ADD_WALL(104,160,32,192,144);
		ADD_WALL(0,224,72,64,144);
		ADD_WALL(0,352,264,32,144);

		ADD_WALL(568,0,72,96,144);
		ADD_WALL(440,0,96,32,144);
		ADD_WALL(376,0,32,160,144);
		ADD_WALL(376,96,264,64,144);
		ADD_WALL(504,160,32,192,144);
		ADD_WALL(568,224,72,64,144);
		ADD_WALL(376,352,264,32,144);

	END_NEW_ROOM(FALSE,FALSE);

	// room 28
	NEW_ROOM_EXTRA("WhiteMaze2",bgImage,144,isMazeDark,TRUE,TRUE,264,192);

		ADD_WALL(0,0,640,32,144);
		ADD_WALL(296,32,48,192,144);
		ADD_WALL(168,224,304,64,144);

		ADD_WALL(0,96,264,64,144);
		ADD_WALL(232,160,32,64,144);
		ADD_WALL(0,224,72,160,144);
		ADD_WALL(104,224,32,160,144);
		ADD_WALL(168,288,32,96,144);
		ADD_WALL(136,352,32,32,144);
		ADD_WALL(232,352,32,32,144);

		ADD_WALL(376,96,264,64,144);
		ADD_WALL(376,160,32,64,144);
		ADD_WALL(568,224,72,160,144);
		ADD_WALL(504,224,32,160,144);
		ADD_WALL(440,288,32,96,144);
		ADD_WALL(472,352,32,32,144);
		ADD_WALL(376,352,32,32,144);

	END_NEW_ROOM(FALSE,FALSE);

	// room 29
	NEW_ROOM_EXTRA("WhiteMaze3",bgImage,144,isMazeDark,FALSE,FALSE,-1,-1,);

		ADD_WALL(0,0,640,32,144);
		ADD_WALL(296,288,48,96,144);

		ADD_WALL(0,96,264,64,144);
		ADD_WALL(232,160,32,224,144);
		ADD_WALL(0,224,200,64,144);
		ADD_WALL(0,288,72,96,144);
		ADD_WALL(168,288,32,96,144);
		ADD_WALL(104,352,32,32,144);
		ADD_WALL(300,352,32,32,144);

		ADD_WALL(376,96,264,64,144);
		ADD_WALL(376,160,32,224,144);
		ADD_WALL(440,224,200,64,144);
		ADD_WALL(568,288,72,96,144);
		ADD_WALL(440,288,32,96,144);
		ADD_WALL(504,352,32,32,144);
		ADD_WALL(308,352,32,32,144);

	END_NEW_ROOM(FALSE,FALSE);

	NEW_ROOM_EXTRA("WhiteMaze4",bgImage,144,isMazeDark,TRUE,TRUE,136,208);

		ADD_WALL(296,0,48,32,144);
		ADD_WALL(168,96,304,64,144);

		ADD_WALL(0,0,72,160,144);
		ADD_WALL(104,0,32,224,144);
		ADD_WALL(168,0,96,32,144);
		ADD_WALL(168,160,32,64,144);
		ADD_WALL(0,224,200,64,144);
		ADD_WALL(0,352,264,32,144);

		ADD_WALL(568,0,72,160,144);
		ADD_WALL(504,0,32,224,144);
		ADD_WALL(376,0,96,32,144);
		ADD_WALL(440,160,32,64,144);
		ADD_WALL(440,224,200,64,144);
		ADD_WALL(376,352,264,32,144);

	END_NEW_ROOM(FALSE,FALSE);

	// room 31
	NEW_ROOM_EXTRA("EasterEggBottom",bgImage,144,FALSE,FALSE,FALSE,-1,-1);

		ADD_WALL(0,352,640,32,144);

		ADD_WALL(0,0,256,32,144);
		ADD_WALL(384,0,256,32,144);

		ADD_WALL(0,0,32,Game::theScreenHeight,144);
		ADD_WALL(608,0,32,Game::theScreenHeight,144);
		
	END_NEW_ROOM(FALSE,FALSE);

	MAKE_ROOM_CONNECTION(0,1,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(0,1,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(0,3,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(0,4,RoomConnector::CONNECTION_LOCATION_RIGHT);
	
    MAKE_ROOM_CONNECTION(1,0,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(1,1,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(1,1,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(1,0,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_GATE_CONNECTION(1,2,goldGate);
	
	MAKE_ROOM_CONNECTION(2,2,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(2,2,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(2,2,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_CASTLE_EXIT(2,1,goldGate);

	MAKE_ROOM_CONNECTION(3,0,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(3,4,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(3,11,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(3,6,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(4,0,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(4,5,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(4,9,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(4,18,RoomConnector::CONNECTION_LOCATION_BOTTOM);

	MAKE_ROOM_CONNECTION(5,31,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(5,4,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(5,3,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(5,13,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(6,3,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(6,7,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(6,7,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(6,10,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(7,6,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(7,6,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(7,8,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(7,9,RoomConnector::CONNECTION_LOCATION_BOTTOM);

	MAKE_ROOM_CONNECTION(8,7,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(8,9,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(8,10,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(8,11,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(9,7,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(9,10,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(9,8,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(9,4,RoomConnector::CONNECTION_LOCATION_BOTTOM);

	MAKE_ROOM_CONNECTION(10,9,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(10,6,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(10,8,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(10,0,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(11,3,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(11,8,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(11,11,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(11,11,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_GATE_CONNECTION(11,12,blackGate);

	MAKE_ROOM_CONNECTION(12,12,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(12,12,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(12,14,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_CASTLE_EXIT(12,11,blackGate);

	MAKE_ROOM_CONNECTION(13,5,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(13,3,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(13,4,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(13,31,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(14,12,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(14,16,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(14,15,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(14,17,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(15,14,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(15,16,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(15,16,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(15,17,RoomConnector::CONNECTION_LOCATION_LEFT);
	
	MAKE_ROOM_CONNECTION(16,14,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(16,15,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(16,15,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(16,17,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(17,16,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(17,14,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(17,14,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(17,15,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(18,19,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(18,4,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(18,19,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(18,19,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(19,18,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(19,18,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(19,20,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(19,18,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(20,24,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(20,19,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(20,22,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(20,21,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(21,20,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(21,22,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(21,23,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(21,24,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(22,19,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(22,23,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(22,21,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(22,25,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(23,25,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(23,21,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(23,11,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(23,25,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(24,21,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(24,26,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(24,25,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(24,20,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(25,23,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(25,24,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_ROOM_CONNECTION(25,26,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(25,23,RoomConnector::CONNECTION_LOCATION_RIGHT);

	MAKE_ROOM_CONNECTION(26,24,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(26,23,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(26,19,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(26,23,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_GATE_CONNECTION(26,27,whiteGate);

	MAKE_ROOM_CONNECTION(27,30,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(27,30,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(27,28,RoomConnector::CONNECTION_LOCATION_TOP);
	MAKE_CASTLE_EXIT(27,26,whiteGate);

	MAKE_ROOM_CONNECTION(28,27,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(28,29,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(28,29,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(28,24,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(29,30,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(29,28,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(29,28,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(29,24,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(30,29,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(30,27,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(30,27,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(30,29,RoomConnector::CONNECTION_LOCATION_TOP);

	MAKE_ROOM_CONNECTION(31,13,RoomConnector::CONNECTION_LOCATION_BOTTOM);
	MAKE_ROOM_CONNECTION(31,4,RoomConnector::CONNECTION_LOCATION_LEFT);
	MAKE_ROOM_CONNECTION(31,3,RoomConnector::CONNECTION_LOCATION_RIGHT);
	MAKE_ROOM_CONNECTION(31,5,RoomConnector::CONNECTION_LOCATION_TOP);

	itsPlayerStartX = 312;
	itsPlayerStartY = Game::theScreenHeight - 64;

	setObjectsPositionsAndRooms();

	CREATE_PLAYER();


	CREATE_DOT(itsDotX,itsDotY,itsDotRoom);
	CREATE_MAGNET(itsMagnetX,itsMagnetY,itsMagnetRoom);
	CREATE_BRIDGE(itsBridgeX,itsBridgeY,itsBridgeRoom);
	CREATE_CHALICE(itsChaliceX,itsChaliceY,itsChaliceRoom);
	CREATE_SWORD(itsSwordX,itsSwordY,itsSwordRoom);

	CREATE_KEY(CASTLE_COLOR_GOLD,itsYellowKeyX,itsYellowKeyY,itsYellowKeyRoom);
	CREATE_DRAGON(itsYellowDragonX,itsYellowDragonY,DRAGON_COLOR_YELLOW,itsYellowDragonRoom,thisKey,sword,0,itsNonRedDragonSpeed,itsDragonMouthOpenTime);
	CREATE_KEY(CASTLE_COLOR_BLACK,itsBlackKeyX,itsBlackKeyY,itsBlackKeyRoom);
	CREATE_DRAGON(itsGreenDragonX,itsGreenDragonY,DRAGON_COLOR_GREEN,itsGreenDragonRoom,bridge,NULL,0,itsNonRedDragonSpeed,itsDragonMouthOpenTime);
	
	CREATE_KEY(CASTLE_COLOR_WHITE,itsWhiteKeyX,itsWhiteKeyY,itsWhiteKeyRoom);

	CREATE_DRAGON(itsRedDragonX,itsRedDragonY,DRAGON_COLOR_RED,itsRedDragonRoom,chalice,NULL,0,Player::theMovementSpeed,itsDragonMouthOpenTime);
	
	CREATE_CANDLE(itsCandleX,itsCandleY,itsCandleRoom);
	CREATE_ARMOUR(itsArmourX,itsArmourY,itsArmourRoom);
	CREATE_BAT(itsBatX,itsBatY,itsBatRoom);
	assert(chalice != NULL);
	assert(sword != NULL);

	CREATE_EASTEREGG(320,0,5,"easteregg",itsRobinettImages);
	CREATE_EASTEREGG(156,142,13,"davetron",itsDavetronImages);
	CREATE_EASTEREGG(156,142,31,"thanks",itsThanksImages);


	END_WORLD();

    return TRUE;
}

void Game2World::release()
{
	delete itsChaliceImages;
	delete itsGateImages;
	delete itsBatImages;
	delete itsRobinettImages;
	delete itsDavetronImages;
	delete itsThanksImages;
}
